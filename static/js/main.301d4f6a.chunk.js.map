{"version":3,"sources":["views/component/Settings.js","views/Login.js","views/component/Loading.js","views/Profile.js","views/component/Logout.js","views/Main.js","App.js","serviceWorker.js","key.js","index.js"],"names":["Settings","react_default","a","createElement","io","size","this","props","className","onClick","Component","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","createLoginButton","window","Kakao","Auth","container","success","authObj","setState","redirect","fail","err","alert","JSON","stringify","state","Redirect","to","Settings_Settings","Loading","undefined","isAuthed","Profile","_isMounted","getProfile","asyncToGenerator","regenerator_default","mark","_callee","res","properties","wrap","_context","prev","next","API","request","url","sent","stop","componentWillUnmount","render","_this$state$propertie","nickname","thumbnail_image","src","alt","console","log","profile_image","Main","kakaoLogOut","logout","isLogin","sendTest","data","template_id","args","title","description","t0","encodeURIComponent","Profile_Profile","App","isLogined","getStatus","statusObj","status","_this2","BrowserRouter","Switch","Route","exact","path","component","Loading_Loading","Login_Login","changeAuth","Main_Main","Boolean","location","hostname","match","store","APP_KEY","key","str","error","init","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.301d4f6a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { IoIosSettings } from 'react-icons/io'\n\nexport default class Settings extends Component {\n    render() {\n        return (\n        <IoIosSettings \n            size={this.props.size}\n            className={this.props.className}\n            onClick={this.props.onClick}\n        />\n        )\n    }\n}\n","/**\n * Login.js\n * Aerain, Jeju National University.\n */\n\nimport React, { Component } from 'react'\nimport Settings from './component/Settings'\nimport { Redirect } from 'react-router-dom';\nimport './Login.css';\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            redirect: false\n        }\n    }\n\n    componentDidMount = () => this.createLoginButton();\n\n    createLoginButton = () => {\n        window.Kakao.Auth.createLoginButton({\n            container: '.kakao-login-btn',\n            success: authObj => {\n                this.setState({redirect: true});\n            },\n            fail: err => {\n               alert(JSON.stringify(err));\n            }\n        });\n    }\n\n    render() {\n        if(this.state.redirect) return <Redirect to=\"/send\" />\n        return (\n        <div className=\"login\">\n            <Settings\n                size={30}\n                className=\"settings-btn\"\n                onClick={() => alert(\"test\")}\n            />\n            <div className=\"image-dummy\">&lt;이미지 테스트에오&gt;</div>\n            <div className=\"kakao-login-btn\"></div>\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\n\nexport default class Loading extends Component {\n\n    render() {\n        if(this.props.isAuthed === undefined) {\n            return (\n                <div>\n                    로딩중이에오...\n                </div>\n            )\n        } else {\n            if(!this.props.isAuthed) return <Redirect to=\"/login\" />\n            else return <Redirect to=\"/send\" />\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport './Profile.css';\nimport { SettingsButton } from './component';\n\nexport default class Profile extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      properties: {\n        nickname: \"none\",\n        profile_image: \"none\",\n      }\n    }\n  }\n  componentDidMount = () => {\n    this._isMounted = true;\n    this.getProfile();\n  }\n\n  getProfile = async () => {\n      let res = await window.Kakao.API.request({\n        url: '/v2/user/me'\n      })\n      let { properties } = res;\n      if(this._isMounted) await this.setState({properties})\n  }\n  \n  componentWillUnmount = () => {\n    this._isMounted = false;\n  }\n\n  render = () => {\n    let {nickname, thumbnail_image} = this.state.properties;\n    return(\n      <header className=\"profile-header\">\n        <div className=\"profile-item\">\n          <img className=\"profile-image\" src={thumbnail_image !== 'none' ? thumbnail_image : ''} alt=\"프로필 사진\" />\n          <span className=\"profile-nickname\">{nickname !== 'none' ? nickname : ''}</span>\n        </div>\n        <SettingsButton className=\"settings-btn\" size={25} onClick={() => console.log('test')} />\n        {/* <LogOutButton size={25} onClick={this.props.kakaoLogOut} /> */}\n      </header>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { IoIosLogOut } from 'react-icons/io';\n\nexport default class Logout extends Component {\n    render() {\n        return (\n            <IoIosLogOut \n                size={this.props.size}\n                className={this.props.className}\n                onClick={this.props.onClick}\n            />\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Main.css';\nimport Profile from './Profile';\n\nexport default class Main extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLogin: true\n    }\n    console.log(encodeURIComponent('파워테스트'));\n  }\n\n  \n  kakaoLogOut = () => {\n    window.Kakao.Auth.logout();\n    this.setState({isLogin: false});\n  }\n\n  sendTest = async () => {\n    try {\n      let res = await window.Kakao.API.request({\n        url: '/v2/api/talk/memo/send',\n        data: {\n          'template_id': 14322,\n          'args': JSON.stringify({\n            'title': \"파워테스트\",\n            'description': \"실화냐..\"\n          })\n        }\n      })\n      console.log(res);\n    } catch (err) {\n      console.log(err, '이에오');\n    }\n  }\n\n  render() {\n    if(!this.state.isLogin) return <Redirect to=\"/login\" />\n    return (\n      <div>\n        <Profile kakaoLogOut={this.kakaoLogOut} />\n        로그인 했대요\n        <button onClick={this.sendTest}>내게보내기 테스트</button>\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Login from './views/Login';\nimport Main from './views/Main';\nimport Loading from './views/component/Loading';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n  componentDidMount = () => this.isLogined();\n\n  isLogined = () => {\n    window.Kakao.Auth.getStatus(statusObj => {\n      let isLogin = statusObj.status === \"connected\" ? true : false;\n      this.setState({ isLogin });\n    })\n    \n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={() => <Loading isAuthed={this.state.isLogin} />} />\n          <Route path=\"/login\" component={() => <Login changeAuth={this.changeAuth}/>} />\n          <Route path=\"/send\" component={() => <Main changeAuth={this.changeAuth}/>} />  \n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const store = {\n    APP_KEY: 'a6728ccac409bd094bb858d9118e121f',\n    get key () { return this.APP_KEY },\n    set key (str) { console.error('cannot change app_key')}\n}\n\nexport { store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { store } from './key';\n\n// 카카오 API 초기화\nwindow.Kakao.init(store.key);\n\nReactDOM.render(<App />, document.getElementById('container'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
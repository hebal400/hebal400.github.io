{"version":3,"sources":["views/component/Settings.js","views/Login.js","views/component/Loading.js","views/component/Logout.js","views/component/Back.js","views/Profile.js","views/Send.js","views/Test.js","views/Main.js","views/Setting.js","App.js","serviceWorker.js","key.js","index.js"],"names":["Settings","react_default","a","createElement","io","this","props","Component","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","createLoginButton","window","Kakao","Auth","container","success","authObj","setState","redirect","fail","err","alert","JSON","stringify","state","Redirect","to","className","Settings_Settings","size","onClick","Loading","undefined","isAuthed","Logout","Back","Profile","_isMounted","getProfile","asyncToGenerator","regenerator_default","mark","_callee","res","properties","wrap","_context","prev","next","API","request","url","sent","stop","componentWillUnmount","render","_this$state$propertie","nickname","thumbnail_image","src","alt","Link","color","profile_image","Send","sendTest","Test","Main","data","template_id","args","title","description","console","log","t0","isLogin","match","Profile_Profile","kakaoLogOut","concat","path","Route","exact","component","Setting","goBack","history","logout","Back_Back","Logout_Logout","App","isLogined","getStatus","statusObj","status","_this2","BrowserRouter","Switch","Loading_Loading","assign","Login_Login","changeAuth","Main_Main","Boolean","location","hostname","store","APP_KEY","key","str","error","init","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6b6a4bf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { IoIosSettings } from 'react-icons/io';\n\nexport default class Settings extends Component {\n    render() {\n        return (\n            <IoIosSettings \n                {...this.props}\n            />\n        )\n    }\n}\n","/**\n * Login.js\n * Aerain, Jeju National University.\n */\n\nimport React, { Component } from 'react'\nimport Settings from './component/Settings'\nimport { Redirect } from 'react-router-dom';\nimport './css/Login.css';\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            redirect: false\n        }\n    }\n\n    componentDidMount = () => this.createLoginButton();\n\n    createLoginButton = () => {\n        window.Kakao.Auth.createLoginButton({\n            container: '.kakao-login-btn',\n            success: authObj => {\n                this.setState({redirect: true});\n            },\n            fail: err => {\n               alert(JSON.stringify(err));\n            }\n        });\n    }\n\n    render() {\n        if(this.state.redirect) return <Redirect to=\"/send\" />\n        return (\n        <div className=\"login\">\n            <Settings\n                size={30}\n                className=\"settings-btn\"\n                onClick={() => alert(\"test\")}\n            />\n            <div className=\"image-dummy\">&lt;이미지 테스트에오&gt;</div>\n            <div className=\"kakao-login-btn\"></div>\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\n\nexport default class Loading extends Component {\n\n    render() {\n        if(this.props.isAuthed === undefined) {\n            return (\n                <div>\n                    로딩중이에오...\n                </div>\n            )\n        } else {\n            if(!this.props.isAuthed) return <Redirect to=\"/login\" />\n            else return <Redirect to=\"/send\" />\n        }\n    }\n}\n","import React, { Component } from 'react'\nimport { IoIosLogOut } from 'react-icons/io';\n\nexport default class Logout extends Component {\n    render() {\n        return (\n            <IoIosLogOut \n                size={this.props.size}\n                className={this.props.className}\n                onClick={this.props.onClick}\n            />\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { IoIosArrowBack } from 'react-icons/io';\n\nexport default class Back extends Component {\n  render() {\n    return (\n      <IoIosArrowBack \n        {...this.props}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './css/Profile.css';\nimport { SettingsButton } from './component';\nimport { Link } from 'react-router-dom';\n\nexport default class Profile extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      properties: {\n        nickname: \"none\",\n        profile_image: \"none\",\n      }\n    }\n  }\n  componentDidMount = () => {\n    this._isMounted = true;\n    this.getProfile();\n  }\n\n  getProfile = async () => {\n      let res = await window.Kakao.API.request({\n        url: '/v2/user/me'\n      })\n      let { properties } = res;\n      if(this._isMounted) await this.setState({properties})\n  }\n  \n  componentWillUnmount = () => {\n    this._isMounted = false;\n  }\n\n  render = () => {\n    let {nickname, thumbnail_image} = this.state.properties;\n    return(\n      <header className=\"profile-header\">\n        <div className=\"profile-item\">\n          <img className=\"profile-image\" src={thumbnail_image !== 'none' ? thumbnail_image : ''} alt=\"프로필 사진\" />\n          <span className=\"profile-nickname\">{nickname !== 'none' ? nickname : ''}</span>\n        </div>\n        <Link to=\"/settings\"><SettingsButton className=\"settings-btn\" size={25} color=\"#353645\"/></Link>\n      </header>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Send extends Component {\n  render() {\n        return (\n        <div>\n            로그인 했대요\n            <button onClick={this.sendTest}>내게보내기 테스트</button>\n        </div>\n        )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Test extends Component {\n  render() {\n    return (\n      <div>\n        test\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Redirect, Link } from 'react-router-dom';\nimport './css/Main.css';\nimport Profile from './Profile';\nimport Send from './Send';\nimport Test from './Test';\n\nexport default class Main extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: true\n    }\n  }\n\n  sendTest = async () => {\n    try {\n      let res = await window.Kakao.API.request({\n        url: '/v2/api/talk/memo/send',\n        data: {\n          'template_id': 14322,\n          'args': JSON.stringify({\n            'title': \"파워테스트\",\n            'description': \"실화냐..\"\n          })\n        }\n      })\n      console.log(res);\n    } catch (err) {\n      console.log(err, '이에오');\n    }\n  }\n\n  render() {\n    let { match } = this.props;\n    if(!this.state.isLogin) return <Redirect to=\"/login\" />\n    return (\n        <div>\n          <Profile kakaoLogOut={this.kakaoLogOut} />\n          <ul>\n            <li>\n              <Link to={`${match.path}`}>보내기</Link>\n            </li>\n            <li>\n              <Link to={`${match.path}/test`}>테스트</Link>\n            </li>\n          </ul>\n          <Route exact path={`${match.path}`} component={Send} />\n          <Route path={`${match.path}/test`} component={Test} />\n        </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport { LogOutButton, BackButton } from './component';\nimport { Redirect } from 'react-router-dom';\n\nimport './css/Settings.css';\n\nexport default class Setting extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLogin: true\n        }\n    }\n    goBack = () => {\n        this.props.history.goBack();\n    }\n\n    kakaoLogOut = () => {\n        window.Kakao.Auth.logout();\n        this.setState({isLogin: false});\n    }\n\n    render() {\n        if(!this.state.isLogin) return <Redirect to=\"/login\" />\n\n        return (\n        <div className=\"settings\">\n            <header className=\"settings-header\">\n                <BackButton className=\"back-button\" size={25} color=\"rgb(53,64,69)\" onClick={this.goBack}/>\n                <span className=\"settings-header-title\">설정</span>\n            </header>\n            <div className=\"settings-list\">\n                <div className=\"settings-list-item\">\n                    <span className=\"settings-list-item-title\">오픈소스 라이센스</span>\n                </div>\n            </div>\n            <footer className=\"settings-footer\">\n                <LogOutButton \n                    className=\"logout-button\" \n                    size={25} \n                    color=\"rgb(53,64,69\" \n                    onClick={this.kakaoLogOut}\n                />\n            </footer>\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Login from './views/Login';\nimport Main from './views/Main';\nimport Loading from './views/component/Loading';\nimport Settings from './views/Setting';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n  componentDidMount = () => this.isLogined();\n\n  isLogined = () => {\n    window.Kakao.Auth.getStatus(statusObj => {\n      let isLogin = statusObj.status === \"connected\" ? true : false;\n      this.setState({ isLogin });\n    })\n    \n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={props => <Loading {...props} isAuthed={this.state.isLogin} />} />\n          <Route path=\"/login\" component={props => <Login {...props} changeAuth={this.changeAuth}/>} />\n          <Route path=\"/send\" component={props => <Main {...props} changeAuth={this.changeAuth}/>} />  \n          <Route path=\"/settings\" component={Settings} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const store = {\n    APP_KEY: 'a6728ccac409bd094bb858d9118e121f',\n    get key () { return this.APP_KEY },\n    set key (str) { console.error('cannot change app_key')}\n}\n\nexport { store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { store } from './key';\n\n// 카카오 API 초기화\nwindow.Kakao.init(store.key);\n\nReactDOM.render(<App />, document.getElementById('container'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
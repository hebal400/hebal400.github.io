{"version":3,"sources":["views/component/Settings.js","views/Login.js","views/component/Loading.js","views/component/Logout.js","views/component/Back.js","views/Profile.js","views/Send.js","views/Calculator.js","views/Main.js","views/Setting.js","App.js","serviceWorker.js","key.js","index.js"],"names":["Settings","react_default","a","createElement","io","this","props","Component","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","createLoginButton","window","Kakao","Auth","container","success","authObj","setState","redirect","fail","err","alert","JSON","stringify","state","Redirect","to","className","Link","pathname","isLogin","Settings_Settings","size","Loading","undefined","isAuthed","Logout","onClick","Back","Profile","_isMounted","getProfile","asyncToGenerator","regenerator_default","mark","_callee","res","properties","wrap","_context","prev","next","API","request","url","sent","stop","componentWillUnmount","render","_this$state$propertie","nickname","thumbnail_image","src","alt","color","profile_image","Send","sendTest","data","template_object","object_type","text","link","web_url","mobile_web_url","console","log","t0","id","htmlFor","name","type","Calculator","changefromValueState","event","fromValue","currentTarget","value","compareValues","changetoValueState","toValue","_this$state","_renderMonth","href","onChange","defaultValue","autoFocus","Main","match","Profile_Profile","kakaoLogOut","NavLink","concat","path","Route","exact","component","Setting","goBack","history","logout","_renderLoginButton","Logout_Logout","location","Back_Back","App","isLogined","getStatus","statusObj","status","_this2","BrowserRouter","Switch","Loading_Loading","assign","Login_Login","changeAuth","Main_Main","Boolean","hostname","store","APP_KEY","key","str","error","init","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f520765.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { IoIosSettings } from 'react-icons/io';\n\nexport default class Settings extends Component {\n    render() {\n        return (\n            <IoIosSettings \n                {...this.props}\n            />\n        )\n    }\n}\n","/**\n * Login.js\n * Aerain, Jeju National University.\n */\n\nimport React, { Component } from 'react'\nimport Settings from './component/Settings'\nimport { Redirect, Link } from 'react-router-dom';\nimport './css/Login.css';\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            redirect: false\n        }\n    }\n\n    componentDidMount = () => this.createLoginButton();\n\n    createLoginButton = () => {\n        window.Kakao.Auth.createLoginButton({\n            container: '.kakao-login-btn',\n            success: authObj => {\n                this.setState({redirect: true});\n            },\n            fail: err => {\n               alert(JSON.stringify(err));\n            }\n        });\n    }\n\n    render() {\n        if(this.state.redirect) return <Redirect to=\"/send\" />\n        return (\n        <div className=\"login\">\n            <Link to={{ pathname: \"/settings\", state: { isLogin: false }}}>\n                <Settings\n                    size={30}\n                    className=\"settings-btn\"\n                />\n            </Link>\n            \n            <div className=\"image-dummy\">&lt;이미지 테스트에오&gt;</div>\n            <div className=\"kakao-login-btn\"></div>\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\n\nexport default class Loading extends Component {\n\n    render() {\n        if(this.props.isAuthed === undefined) {\n            return (\n                <div>\n                    로딩중이에오...\n                </div>\n            )\n        } else {\n            if(!this.props.isAuthed) return <Redirect to=\"/login\" />\n            else return <Redirect to=\"/send\" />\n        }   \n    }\n}\n","import React, { Component } from 'react'\nimport { IoIosLogOut } from 'react-icons/io';\n\nexport default class Logout extends Component {\n    render() {\n        return (\n            <IoIosLogOut \n                size={this.props.size}\n                className={this.props.className}\n                onClick={this.props.onClick}\n            />\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { IoIosArrowBack } from 'react-icons/io';\n\nexport default class Back extends Component {\n  render() {\n    return (\n      <IoIosArrowBack \n        {...this.props}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './css/Profile.css';\nimport { SettingsButton } from './component';\nimport { Link } from 'react-router-dom';\n\nexport default class Profile extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      properties: {\n        nickname: \"none\",\n        profile_image: \"none\",\n      }\n    }\n  }\n  componentDidMount = () => {\n    this._isMounted = true;\n    this.getProfile();\n  }\n\n  getProfile = async () => {\n      let res = await window.Kakao.API.request({\n        url: '/v2/user/me'\n      })\n      let { properties } = res;\n      if(this._isMounted) await this.setState({properties})\n  }\n  \n  componentWillUnmount = () => {\n    this._isMounted = false;\n  }\n  \n  render = () => {\n    let {nickname, thumbnail_image} = this.state.properties;\n    return(\n      <header className=\"profile-header\">\n        <div className=\"profile-item\">\n          <img className=\"profile-image\" src={thumbnail_image !== 'none' ? thumbnail_image : ''} alt=\"프로필 사진\" />\n          <span className=\"profile-nickname\">{nickname !== 'none' ? nickname : ''}</span>\n        </div>\n        <Link to={{pathname: \"/settings\", state: { isLogin: true }}}><SettingsButton className=\"settings-btn\" size={25} color=\"#353645\"/></Link>\n      </header>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Send extends Component {\n\n  sendTest = async () => {\n    try {\n      // let res = await window.Kakao.API.request({\n      //   url: '/v2/api/talk/memo/send',\n      //   data: {\n      //     'template_id': 14322,\n      //     'args': JSON.stringify({\n      //       'title': \"파워테스트\",\n      //       'description': \"실화냐..\"\n      //     })\n      //   }\n      // })\n\n      let res = await window.Kakao.API.request({\n        url: '/v2/api/talk/memo/default/send',\n        data: {\n          'template_object': {\n            'object_type': 'text',\n            'text': `근무시간: 주 5일(상의 후결정)\n시급: 6000원,\n추가내용: 최저도 안주네 ㅡㅡ\n테스트 한직\n오 되네?\n            `,\n            'link': {\n              'web_url': 'https://www.naver.com',\n              'mobile_web_url': 'https://www.daum.net'\n            }\n          }\n        }\n      })\n      console.log(res);\n    } catch (err) {\n      console.log(err, '이에오');\n    }\n  }\n\n  render() {\n        return (\n        <div>\n          <div id=\"working\">\n            <label htmlFor=\"working-hour\" className=\"label\">\n              근무시간\n              <input name=\"working-hour\" className=\"text working-hour\" />\n            </label>\n            <br />\n\n            <label htmlFor=\"pay\" className=\"label\">\n              급여\n              <input name=\"pay\" className=\"text pay\" />\n            </label>\n            <br />\n\n            <label type=\"number\" htmlFor=\"callnumber\" className=\"label\">\n              연락처\n              <input name=\"callnumber\" className=\"text callnumber\" />\n            </label>\n            <br />\n\n            <label htmlFor=\"more-details\" className=\"label\">\n              추가메모\n              <input type=\"text\" name=\"more-details\" id=\"more-details\" />\n            </label>\n\n          </div>\n          <button onClick={this.sendTest}>내게보내기 테스트</button>\n        </div>\n        )\n  }\n}\n","import React, { Component } from 'react'\nimport \"./css/Calculator.css\"\n\nimport Calculation from './Calculation';\n\nexport default class Calculator extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fromValue: \"시급\",\n      toValue: \"월급\",\n    }\n  }\n\n  changefromValueState = event => {\n    let fromValue = event.currentTarget.value;\n    this.setState({fromValue}, this.compareValues)\n  }\n\n  changetoValueState = event => {\n    let toValue = event.currentTarget.value;\n    this.setState({toValue}, this.compareValues)\n  }\n\n  compareValues = () => {\n\n    let {fromValue, toValue} = this.state;\n    console.log(fromValue, toValue)\n    if(fromValue === toValue) alert('둘이 같아오');\n    console.log(this.state.fromValue, this.state.toValue);\n    //console.log(Calculation.test(this.state.fromValue, this.state.toValue)); \n  }\n\n  _renderMonth = () => (this.state.toValue !== '월급')\n  ? (\n      <li>\n          <a href=\"#monthworkday\"><label htmlFor=\"monthworkday\" className=\"title\">한 달 근무일 수</label></a>\n          <input type=\"text\" id=\"monthworkday\" />일\n      </li>\n  ) : null\n\n  render() {\n    return (\n      <div>\n      <div className=\"typearea\"> \n            <p id=\"lowestpay\">2019년의 최저임금은 8,350원입니다.</p>\n            <ul id=\"fromtoul\">\n                <li>\n                    <select name=\"from\" onChange={this.changefromValueState} defaultValue={this.state.fromValue}>\n                        <option value=\"시급\">시급</option>\n                        <option value=\"일급\">일급</option>\n                        <option value=\"주급\">주급</option>                        \n                        <option value=\"월급\">월급</option>\n                        <option value=\"연봉\">연봉</option>\n                    </select>\n                </li>\n                <li>\n                    <p>을</p>\n                </li>\n                <li>\n                    <select name=\"to\" onChange={this.changetoValueState} defaultValue={this.state.toValue}>\n                        <option value=\"시급\">시급</option>\n                        <option value=\"일급\">일급</option>\n                        <option value=\"주급\">주급</option>\n                        <option value=\"월급\">월급</option>\n                        <option value=\"연봉\">연봉</option>\n                    </select>\n                </li>\n                <li>\n                    <p>으로</p>\n                </li>\n            </ul>\n        </div>\n\n        <div className=\"formarea\">\n            <ul id=\"formul\">\n                <li>\n                    <a href=\"#pay\"><label htmlFor=\"pay\" className=\"title\">{this.state.fromValue}</label></a>\n                    <input type=\"text\" id=\"pay\" autoFocus=\"checked\" />원\n                </li>\n                <li>\n                    <a href=\"#dayworktime\"><label htmlFor=\"dayworktime\" className=\"title\">일일 근무 시간</label></a>\n                    <input type=\"text\" id=\"dayworktime\" />시간\n                </li>\n                <li>\n                    <a href=\"#weekworkday\"><label htmlFor=\"weekworkday\" className=\"title\">한 주 근무일 수</label></a>\n                    <input type=\"text\" id=\"weekworkday\" />일\n                </li>\n                {this._renderMonth()}\n                \n            </ul>\n            <div className=\"calculbtn\">\n                <p>계산하기</p>\n            </div>\n        </div>\n            \n        <div className=\"resultarea\">\n\n            <ul id=\"resultul\">\n                <li><p>예상 {this.state.toValue}은</p></li>\n                <li><p id=\"resultpay\"><b>11,050</b></p></li>\n                <li><p>원 입니다.</p></li>\n            </ul>\n\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Redirect, NavLink } from 'react-router-dom';\nimport { IoIosClipboard, IoIosCalculator } from 'react-icons/io';\n// import 'https://fonts.googleapis.com/css?family=Jua';\nimport './css/Main.css';\nimport Profile from './Profile';\nimport Send from './Send';\nimport Calculator from './Calculator';\n\nexport default class Main extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: true\n    }\n\n  }\n\n  render() {\n    let { match } = this.props;\n    if(!this.state.isLogin) return <Redirect to=\"/login\" />\n    return (\n        <div>\n          <Profile kakaoLogOut={this.kakaoLogOut} />\n          <ul className=\"main-tabs\">\n            <li className=\"main-tabs-item\">\n              <NavLink to={`${match.path}`}>\n                <IoIosClipboard className=\"main-tabs-icon\" size={25} color=\"#344955\"/>\n                <span>보내기</span>\n              </NavLink>\n            </li>\n            <li className=\"main-tabs-item\">\n              <NavLink to={`${match.path}/test`}>\n                <IoIosCalculator className=\"main-tabs-icon\" size={25} color=\"#344955\"/>\n                <span>테스트</span>\n              </NavLink>\n            </li>\n          </ul>\n\n          <Route exact path={`${match.path}`} component={Send} />\n          <Route path={`${match.path}/test`} component={Calculator} />\n\n        </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { LogOutButton, BackButton } from './component';\nimport { Redirect } from 'react-router-dom';\n\nimport './css/Settings.css';\n\nexport default class Setting extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLogin: props.location.state.isLogin,\n            redirect: false\n        }\n    }\n    goBack = () => {\n        this.props.history.goBack();\n    }\n\n    kakaoLogOut = () => {\n        if(this.state.isLogin) {\n            window.Kakao.Auth.logout();\n            this.setState({isLogin: false, redirect: true});\n        }\n    }\n\n    _renderLoginButton = () => ((this.state.isLogin) ? (\n        <span className=\"logout-button\" >\n            <LogOutButton \n                size={25} \n                color=\"rgb(53,64,69\" \n                onClick={this.kakaoLogOut}\n            />\n        </span>\n    ) : null)\n\n    render() {\n        \n        console.log(this.state.isLogin)\n        if(this.state.redirect) return <Redirect to=\"/login\" />\n\n        return (\n        <div className=\"settings\">\n            <header className=\"settings-header\">\n                <BackButton className=\"back-button\" size={25} color=\"rgb(53,64,69)\" onClick={this.goBack}/>\n                <span className=\"settings-header-title\">설정</span>\n            </header>\n            <div className=\"settings-list\">\n                <div className=\"settings-list-item\">\n                    <span className=\"settings-list-item-title\">개발자 소개</span>\n                </div>\n            </div>\n            <footer className=\"settings-footer\">\n                { this._renderLoginButton() } \n            </footer>\n        </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Login from './views/Login';\nimport Main from './views/Main';\nimport Loading from './views/component/Loading';\nimport Settings from './views/Setting';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n  componentDidMount = () => this.isLogined();\n\n  isLogined = () => {\n    window.Kakao.Auth.getStatus(statusObj => {\n      let isLogin = statusObj.status === \"connected\" ? true : false;\n      this.setState({ isLogin });\n    })\n    \n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={props => <Loading {...props} isAuthed={this.state.isLogin} />} />\n          <Route path=\"/login\" component={props => <Login {...props} changeAuth={this.changeAuth}/>} />\n          <Route path=\"/send\" component={props => <Main {...props} changeAuth={this.changeAuth}/>} />  \n          <Route path=\"/settings\" component={Settings} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const store = {\n    APP_KEY: 'a6728ccac409bd094bb858d9118e121f',\n    get key () { return this.APP_KEY },\n    set key (str) { console.error('cannot change app_key')}\n}\n\nexport { store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { store } from './key';\n\n// 카카오 API 초기화\nwindow.Kakao.init(store.key);\n\nReactDOM.render(<App />, document.getElementById('container'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}